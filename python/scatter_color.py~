import ss_readfits
import matplotlib.pyplot as plt
import numpy as np
import math
import os
from astropy.stats import median_absolute_deviation


g_data, g_tags = ss_readfits.ss_readfits("/arrays/igloo1/ssp201701/fits/grams_c.fits")
c_data, c_tags = ss_readfits.ss_readfits("/arrays/igloo1/ssp201701/fits/allconv_c2h2.fits")

colorcode = ['ko', 'ro', 'bo', 'go', 'yo']
#chis = 500


for root, dirs, files in os.walk('/arrays/igloo1/ssp201701/CAGB/CE34_good15rin'):
    filenameC = []
    for i in range(len(files)):
        if files[i][-4:] == '.txt':
            filenameC.append(files[i])
nC = []
tC = []
mC = []
nvC = []
tvC = []    
mvC = []

for i in range(len(filenameC)):
    c2h2 = np.genfromtxt('/arrays/igloo1/ssp201701/CAGB/CE34_sorted15rin/' + filenameC[i], usecols = 1, skip_header = 1, max_rows = 100)
    mylist = list(c2h2)
    myset = set(c2h2)
    print len(myset)
    for s in range(5):
	tmpn = []
	tmpt = []
	myset = set(mylist)
	for j in range(len(myset)):
	    tmpn.append(c_data['logN'][c2h2[j]])
            tmpt.append(c_data['T'][c2h2[j]])
	plt.plot(tmpn, tmpt, colorcode[s])
        for n in myset:
	    mylist.remove(n)
    plt.ylabel('Gas Temperature (K)')
    plt.xlabel('Column Density (log)')
    plt.grid(True)
    plt.axis([14, 21, 0, 900])
    plt.legend(['1', '2', '3', '4', '>5'], loc = 'best')
    plt.savefig('/arrays/igloo1/ssp201701/CAGB/CE34_good15rin/'+ filenameC[i][:-4] + 'color.png')
    plt.close()
    #gram = np.genfromtxt('/arrays/igloo1/ssp201701/CAGB/CE34_sorted15rin/' + filenameC[i], usecols = 0, skip_header = 1, max_rows = 30)
    #nC.append(c_data['logN'][c2h2[0]])
    #tC.append(c_data['T'][c2h2[0]])
    #mC.append(np.log10(g_data['MLR'][gram[0]]))
    #tmpn = []
    #tmpt = []
    #tmpm = []
    """for j in range(len(c2h2)):
        tmpn.append(c_data['logN'][c2h2[j]])
        tmpt.append(c_data['T'][c2h2[j]])
        #tmpm.append(np.log10(g_data['MLR'][gram[j]]))
    plt.plot(tmpn, tmpt, 'ro')
    
    #nvC.append(median_absolute_deviation(tmpn))
    #tvC.append(median_absolute_deviation(tmpt))
    #mvC.append(median_absolute_deviation(tmpm))
"""        
"""
for root, dirs, files in os.walk('/arrays/igloo1/ssp201701/CAGB/CE34_good15rin'):
    filenameE = []
    for i in range(len(files)):
        if files[i][-4:] == '.txt':
            filenameE.append(files[i])
nE = []
tE = []
mE = []
nvE = []
tvE = [] 
mvE = []   

for i in range(len(filenameE)):
    c2h2 = np.genfromtxt('/arrays/igloo1/ssp201701/CAGB/CE34_sorted15rin/' + filenameE[i], usecols = 1, skip_header = 1, max_rows = 30)
    gram = np.genfromtxt('/arrays/igloo1/ssp201701/CAGB/CE34_sorted15rin/' + filenameE[i], usecols = 0, skip_header = 1, max_rows = 30)
    nE.append(c_data['logN'][c2h2[0]])
    tE.append(c_data['T'][c2h2[0]])
    mE.append(np.log10(g_data['MLR'][gram[0]]))
    tmpn = []
    tmpt = []
    tmpm = []
    for j in range(len(c2h2)):
        tmpn.append(c_data['logN'][c2h2[j]])
        tmpt.append(c_data['T'][c2h2[j]])
	tmpm.append(np.log10(g_data['MLR'][gram[j]]))
    nvE.append(median_absolute_deviation(tmpn))
    tvE.append(median_absolute_deviation(tmpt))
    mvE.append(median_absolute_deviation(tmpm))



plt.errorbar(nE, mE, mvE, nvE, color = 'grey', marker = 'o', linestyle = 'none')
plt.errorbar(nC, mC, mvC, nvC, color = 'grey', marker = '^', linestyle = 'none')

#plt.errorbar(logNV, tgasV, tgasVD, logNVD, 'go')
#plt.errorbar(logNCS, tgasCS, tgasCSD, logNCSD, 'ro', fillstyle = 'none')
#plt.errorbar(logNES, tgasES, tgasESD, logNESD, 'bo', fillstyle = 'none')

#plt.errorbar(logmlrR, logNR, logNRD, logmlrRD, 'ko')


#plt.plot(logmlrE, logNE, 'bo', logmlrC, logNC, 'ro', logmlrV, logNV, 'go', logmlrR, logNR, 'ko')

plt.grid(True)
#plt.xlabel('Optical Depth at 11.3 micron')
plt.xlabel('Column Density (log)')
plt.ylabel('Mass Loss Rate log(M/yr)')
plt.title('Red = CE34, Blue = CE34, \n Best 30 models')
#plt.axis([14, 20, -100, 700])
#plt.xscale('log')
plt.show()
"""

    
    
